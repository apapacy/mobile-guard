global
        lua-load /usr/local/etc/haproxy/register.lua

frontend jwt
        mode http
        bind *:80

        http-request use-service lua.hello-world   if { path /hello_world }
        http-request lua.validate-body             if { path /auth/login }
        # http-request lua.validate-token            if { path -m beg /api }

        http-request set-var(txn.validate_token) hdr(authorization),lua.validate-token-converter

        acl bad_request            var(txn.validate_token) == "bad_request"            -m bool
        acl not_authorized         var(txn.validate_token) == "not_authorized"         -m bool
        acl authentication_timeout var(txn.validate_token) == "authentication_timeout" -m bool
        acl too_many_request       var(txn.validate_token) == "too_many_request"       -m bool
        acl too_many_request       var(txn.too_many_request)                           -m bool
        acl jwt_authorized         var(txn.validate_token) == "jwt_authorized"         -m bool


        # http-request set-var(txn.validate_token) lua.validate-token()

        # acl bad_request            lua.validate-token() == "bad_request"            -m bool
        # acl not_authorized         lua.validate-token() == "not_authorized"         -m bool
        # acl authentication_timeout lua.validate-token() == "authentication_timeout" -m bool
        # acl too_many_request       lua.validate-token() == "too_many_request"       -m bool
        # acl jwt_authorized         lua.validate-token() == "jwt_authorized"         -m bool

        # acl bad_request            var(txn.bad_request)               -m bool
        # acl not_authorized         var(txn.not_authorized)            -m bool
        # acl authentication_timeout var(txn.authentication_timeout)    -m bool
        # acl too_many_request       var(txn.too_many_request)          -m bool
        # acl jwt_authorized         var(txn.jwt_authorized)            -m bool


        # stick-table  type ip  size 100k  expire 30s  store http_req_rate(3s)
        # http-request track-sc0 src
        # http-request deny deny_status 429 if { sc_http_req_rate(0) gt 30 }

        # stick-table  type string  size 100k  expire 30s store http_req_rate(10s)
        # http-request track-sc1 lua.validate-token()
        # http-request deny deny_status 400 if { sc_http_req_rate(1) gt 3 }

        stick-table  type string  size 100k  expire 10s store http_req_rate(10s)
        http-request track-sc1 lua.validate-body('[\"name\"]')
        http-request deny deny_status 403 if { sc_http_req_rate(1) gt 7 }

        http-request deny deny_status 400 if bad_request { path -m beg /api/ }
        http-request deny deny_status 401 if !jwt_authorized { path -m beg /api/ } || not_authorized { path -m beg /api/ }
        http-request return status 419 content-type text/html string "Authentication Timeout" if authentication_timeout { path -m beg /api/ }
        http-request deny deny_status 429 if too_many_request { path -m beg /api/  }
        http-request deny deny_status 429 if too_many_request { path -m beg /auth/  }

        use_backend app if { path /hello }
        use_backend app if { path /auth/login }
        use_backend app if jwt_authorized

backend app
        mode http
        server app1 app:3000
